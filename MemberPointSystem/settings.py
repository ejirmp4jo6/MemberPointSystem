"""
Django settings for MemberPointSystem project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import dj_database_url
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from dotenv import load_dotenv
import os

BASE_DIR = Path(__file__).resolve().parent.parent

# 讀取專案根目錄的 .env
load_dotenv(BASE_DIR / ".env")

LINE_LOGIN_CHANNEL_ID = os.getenv("LINE_LOGIN_CHANNEL_ID", "")
LINE_LOGIN_CHANNEL_SECRET = os.getenv("LINE_LOGIN_CHANNEL_SECRET", "")
LINE_LIFF_ID = os.getenv("LINE_LIFF_ID", "")   # ← 就讀這個

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "dev-placeholder-change-me")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False") == "True" 

# 讓 ngrok 的 HTTPS 被視為可信來源（支援萬用字元）
CSRF_TRUSTED_ORIGINS = [
    "https://zubiba.com.tw",
    "https://www.zubiba.com.tw",
    'https://*.ngrok-free.app']

# 允許透過 ngrok 存取
ALLOWED_HOSTS = [
    "*",
    "zubiba.com.tw",
    "www.zubiba.com.tw",
    'localhost', '127.0.0.1', '[::1]', '.ngrok-free.app']

# 告訴 Django：前面有反向代理做了 HTTPS，轉來是 http，但仍視為安全連線
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'None'


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'members',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "MemberPointSystem.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "members.context_processors.liff_and_order",
            ],
        },
    },
]

# 模板與靜態檔
from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent

TEMPLATES[0]['DIRS'] = [BASE_DIR / 'templates']

STATIC_URL = 'static/'
STATIC_ROOT =BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / 'static']
INSTALLED_APPS += ["whitenoise.runserver_nostatic"]
MIDDLEWARE = ["whitenoise.middleware.WhiteNoiseMiddleware", *MIDDLEWARE]
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# 登入/登出導向
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'dashboard'
LOGOUT_REDIRECT_URL = 'login'

# 時區/語系（可依需要調整）
LANGUAGE_CODE = 'zh-hant'
TIME_ZONE = 'Asia/Taipei'
USE_I18N = True
USE_TZ = True


WSGI_APPLICATION = "MemberPointSystem.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

db_url = (os.getenv("DATABASE_URL") or "").strip() or f"sqlite:///{BASE_DIR/'db.sqlite3'}"
is_pg  = db_url.startswith(("postgres://","postgresql://","postgis://","pgsql://","timescale://"))
if not db_url:
    # 本機沒有 DATABASE_URL → 使用 SQLite
    db_url = f"sqlite:///{BASE_DIR / 'db.sqlite3'}"

DATABASES = {
    "default": dj_database_url.parse(db_url, conn_max_age=600, ssl_require=(is_pg and not DEBUG))
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"